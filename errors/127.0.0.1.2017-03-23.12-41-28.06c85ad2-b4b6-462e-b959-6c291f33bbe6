(dp1
S'output'
p2
S"<type 'exceptions.ValueError'> invalid literal for long() with base 10: '||'"
p3
sS'layer'
p4
S'/opt/python/web2py/web2py/applications/cvrf/controllers/resource.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# intente algo como\ndef search():\n    \'\'\'\n    Buscar recursos\n    \'\'\'\n    response.title = T("Buscando") + response.title\n    return dict()\n\ndef search_component():\n    """\n    Function index, resources search\n    q -> Resorce query search\n    c -> Resource category search\n    t -> Resource type search\n    y -> Resource year search\n    i -> Resource id search\n    """\n\n    if request.cid:\n        import app_tools\n\n        state = db(db.state.name == "Publicar").select(db.state.id, cache=(cache.ram, 86400), cacheable=True).first()\n        query = (db.resource.id > 0) & (db.resource.state == state.id)\n\n        if "q" in request.vars:\n            if request.vars.q:\n\n                query_search = db.resource.title.contains(request.vars.q, all=True)\n                query_search |= db.resource.identifier.contains(request.vars.q, all=False)\n\n                query_search |= db.resource.author.like(\'%\'+request.vars.q+\'%\')\n                query_search |= db.resource.keyword.like(\'%\'+request.vars.q+\'%\')\n\n                query &= query_search\n\n                response.flash = T("Searched: ")+\'"\'+request.vars.q+\'"\'\n\n        if "c" in request.vars:\n            try:\n                if request.vars.c:\n                    query &= db.resource.category == int(request.vars.c)\n            except ValueError:\n                response.flash = T("Value of the category not found")\n\n        if "t" in request.vars:\n            try:\n                if request.vars.t:\n                    query &= db.resource.rtype == int(request.vars.t)\n            except ValueError:\n                response.flash = T("Value of the type not found")\n\n        if "y" in request.vars:\n            if request.vars.y:\n                query &= db.resource.year == request.vars.y\n\n        if "i" in request.vars:\n            if request.vars.i:\n                query &= db.resource.id == request.vars.i\n\n        limitby = None\n\n        try:\n            page = int(request.vars.p or 1)-1\n        except ValueError:\n            page = 0\n\n        limitby=(page*PAGINATE, (page+1)*PAGINATE)\n\n        resources = db(query).select(db.resource.ALL, orderby=db.resource.votes_user|~db.resource.downloads|~db.resource.visits, groupby=db.resource.id, limitby=limitby, cache=(cache.ram, 60), cacheable=True)\n        count=db(query).count()\n\n        categories = app_tools.getCategory(None, state.id)\n        types = app_tools.getType(None, state.id)\n        years = app_tools.getYear(None, state.id)\n\n        return dict(categories=categories, types=types, years=years, resources=resources, count=count, paginator=app_tools.paginator(PAGINATE, count), paginate=PAGINATE)\n    else:\n        raise HTTP(403)\n\n@auth.requires_membership("Publicador")\ndef publish():\n    \'\'\'\n    El revisor revisa los recursos en estado de revici\xc3\xb3n, los rechaza o lo acepta\n    \'\'\'\n\n    reviews = None\n\n    selectable = lambda ids: __unmatched_resource(ids, "Publicar")\n\n    query = (db.resource.id > 0)\n    left = (db.resource.on((db.resource.state == db.state.id) & (db.state.name == "Aceptar")))\n\n    fields = [db.resource.id, db.resource.title, db.resource.rtype, db.resource.language, db.resource.category, db.resource.state, db.resource.year, db.resource.keyword, db.resource.author]\n\n    grid = SQLFORM.grid(query, left=left, selectable=selectable, fields=fields, orderby=~db.resource.id, advanced_search=False, create=False, editable=False, deletable=False, selectable_submit_button=T(\'Publish\'))\n\n    heading=grid.elements(\'th\')\n    if heading:\n        heading[0].append(INPUT(_type=\'checkbox\', _onclick="$(\'input[type=checkbox]\').each(function(k){$(this).attr(\'checked\', \'checked\');});"))\n\n    response.title = T("Para Publicar") + response.title\n    response.flash = T("Para Publicar")\n\n    if ("view" in request.args):\n        reviews = db((db.review.id > 0) & (db.review.resource == request.args(-1))).select(orderby=~db.review.created_on)\n\n    return dict(grid=grid, reviews=reviews)\n\ndef __unmatched_resource(ids, state_name):\n    \'\'\'\n    Acepta los recursos seleccionados\n    \'\'\'\n    state = db(db.state.name == state_name).select(db.state.id, cache=(cache.ram, 86400), cacheable=True).first()\n    for resource in db(db.resource.id.belongs(ids)).select():\n        is_valid = db((db.resource.id != resource.id) & (resource.id == state.id) & (db.resource.title == resource.title) & (db.resource.year == resource.year)).isempty()\n        if is_valid:\n            resource.state = state.id\n            resource.update_record()\n        else:\n            state = db(db.state.name == "Rechazar").select(db.state.id, cache=(cache.ram, 86400), cacheable=True).first()\n            db.review.insert(resource=resource.id, note=T(\'El recurso ha sido rechazado porque ya existe un recurso para este t\xc3\xadtulo, a\xc3\xb1o y tipo, en este estado\'), success=False)\n            resource.state = state.id\n            resource.update_record()\n    return True\n\n\n@auth.requires_membership("Revisor")\ndef revised():\n    \'\'\'\n    El revisor revisa los recursos en estado de revici\xc3\xb3n, los rechaza o lo acepta\n    \'\'\'\n    reviews = None\n\n    selectable = lambda ids: __unmatched_resource(ids, "Aceptar")\n\n    query = (db.resource.category.belongs(auth.user.categories_review))\n    left = (db.resource.on((db.resource.state == db.state.id) & (db.state.name == "Revisar")))\n\n    fields = [db.resource.id, db.resource.title, db.resource.rtype, db.resource.language, db.resource.category, db.resource.state, db.resource.year, db.resource.keyword, db.resource.author]\n\n    grid = SQLFORM.grid(query, left=left, selectable=selectable, fields=fields, orderby=~db.resource.id, advanced_search=False, create=False, editable=False, deletable=False, selectable_submit_button=T(\'Acept\'))\n\n    heading=grid.elements(\'th\')\n    if heading:\n        heading[0].append(INPUT(_type=\'checkbox\', _onclick="$(\'input[type=checkbox]\').each(function(k){$(this).attr(\'checked\', \'checked\');});"))\n\n    response.title = T("Para Revisar") + response.title\n    response.flash = T("Para Revisar")\n\n    if ("view" in request.args):\n        reviews = db((db.review.id > 0) & (db.review.resource == request.args(-1))).select(orderby=~db.review.created_on)\n\n    return dict(grid=grid, reviews=reviews)\n\n@auth.requires_signature()\ndef review():\n    \'\'\'\n    Componente que implementa el proceso de revici\xc3\xb3n\n    \'\'\'\n    resource = db.resource(request.args(-1))\n\n    form = SQLFORM(db.review, formstyle=\'bootstrap3_stacked\')\n    opts = [OPTION(state.name, _value=state.id) for state in db((db.state.id > 0) & (db.state.name == "Rechazar") | (db.state.name == "Aceptar")).select(db.state.id, db.state.name, orderby=~db.state.id)]\n\n    if ("Administrador" in auth.user_groups.values()) or ("Publicador" in auth.user_groups.values()):\n        opts = [OPTION(state.name, _value=state.id) for state in db((db.state.id > 0) & (db.state.name == "Rechazar") | (db.state.name == "Publicar")).select(db.state.id, db.state.name, orderby=db.state.id)]\n\n    form[0].insert(-1, INPUT(_type="hidden", _value=resource.id, _name="resource"))\n    form[0].insert(-1, CAT(LABEL(T("Nuevo estado del recurso")), SELECT(*opts, _name="state", _value=T("Estado del Recurso"), _class="form-control")))\n\n    if form.validate():\n        is_valid = db((db.resource.id != resource.id) & (db.resource.state == form.vars.state) & (db.resource.title == resource.title) & (db.resource.year == resource.year)).isempty()\n\n        if is_valid:\n            db.review.insert(resource=form.vars.resource, note=form.vars.note, success=True)\n            resource.state = form.vars.state\n            resource.update_record()\n            response.flash = T(\'Nueva revici\xc3\xb3n agregada\')\n        else:\n            state = db(db.state.name == "Rechazar").select(db.state.id).first()\n            db.review.insert(resource=form.vars.resource, note=T(\'El recurso ha sido rechazado porque ya existe un recurso para este t\xc3\xadtulo, a\xc3\xb1o y tipo\'), success=False)\n            resource.state = state.id\n            resource.update_record()\n            response.flash = T(\'El recurso ha sido rechazado porque ya existe un recurso para este t\xc3\xadtulo, a\xc3\xb1o y tipo\')\n    elif form.errors:\n        response.flash = T(\'El formulario tiene errores\')\n\n    import app_tools\n    limitby = None\n    PAGINATE = 5\n\n    try:\n        page = int(request.vars.p or 1)-1\n    except ValueError:\n        page = 0\n\n    limitby=(page*PAGINATE, (page+1)*PAGINATE)\n\n    query = (db.review.id > 0) & (db.review.resource == resource.id)\n\n    reviews = db(query).select(orderby=~db.review.created_on, limitby=limitby)\n    count=db(query).count()\n\n    return dict(form=form, reviews=reviews, count=count, paginator=app_tools.paginator(PAGINATE, count), paginate=PAGINATE, resource=db.resource(request.args(-1)))\n\n@auth.requires_login()\ndef my_briefcase():\n    """\n    Descargar todos los recursos que son de mi inter\xc3\xa9s (a los que le di mi voto) en formato .zip\n    """\n    def __resource_quit(ids):\n        """\n        Resource quit of the my briefcase\n        """\n        for id in ids:\n            resource = db.resource(id)\n            votes_user = resource.votes_user.remove(auth.user.id)\n            if votes_user:\n                resource.update_record(votes_user = votes_user)\n            else:\n                resource.update_record(votes_user = [])\n        return True\n\n    editable = False\n\n    selectable = lambda ids: __resource_quit(ids)\n\n    if (auth.has_membership(\'Administrador\') or auth.has_membership(\'Revisor\')):\n        editable = deletable = True\n\n    query = db.resource.votes_user.contains(auth.user.id, all=True)\n    left = db.resource.on((db.resource.state == db.state.id) & (db.state.name == "Publicar"))\n    fields = [db.resource.id, db.resource.resource, db.resource.title, db.resource.language, db.resource.category, db.resource.rtype, db.resource.year]\n\n    grid = SQLFORM.grid(query, left=left, selectable=selectable, fields=fields, orderby=~db.resource.id, advanced_search=False, create=False, deletable=deletable, editable=editable, links_in_grid=False, selectable_submit_button=T(\'Unlike\'))\n\n    heading=grid.elements(\'th\')\n    if heading:\n           heading[0].append(INPUT(_type=\'checkbox\', _onclick="$(\'input[type=checkbox]\').each(function(k){$(this).attr(\'checked\', \'checked\');});"))\n\n    response.title = T("My Briefcase") + response.title\n    response.flash = T("My Briefcase")\n\n    return dict(grid=grid)\n\n@auth.requires_login()\ndef multiple_downloads():\n    """\n    Creating zip for multiple download\n    """\n    import app_tools\n    import zipfile\n    from cStringIO import StringIO\n    out = StringIO()\n    files = zipfile.ZipFile(out, mode=\'w\')\n\n    for register in db((db.resource.votes_user.contains(auth.user.id, all=True)) & (db.resource.state == db.state.id) & (db.state.name == "Publicar")).select(db.resource.category, db.resource.title, db.resource.mime_type, db.resource.resource, db.resource.downloads, db.resource.modified_on, db.resource.id):\n        fullpath = app_tools.retrieve_file_properties(register.resource)\n        if register.mime_type == "epub+zip":\n            files.write(fullpath, register.category.name+"/"+register.title+\'.epub\')\n        else:\n            files.write(fullpath, register.category.name+"/"+register.title+\'.\'+register.mime_type)\n\n        db(db.resource.id == register.id).update(downloads = register.downloads + 1, modified_on = register.modified_on)\n\n    files.close()\n    response.headers[\'Content-Type\'] = \'application/zip\'\n    response.headers[\'Content-Disposition\'] = CAT(\'attachment=True; filename=\', T(\'my_briefcase\'), \'.zip\')\n    out.seek(0)\n\n    return response.stream(out, request=request)\n\ndef __resource_exist(form, resource_id):\n    \'\'\'\n    Funci\xc3\xb3n que valida que un recurso no esta publicado en el sistema titulo, a\xc3\xb1o y tipo no pueden coincidir\n    \'\'\'\n    is_valid = db((db.resource.id != resource_id) & (db.resource.title == form.vars.title) & (db.resource.year == form.vars.year) & (db.resource.rtype == form.vars.rtype)).isempty()\n    if not is_valid:\n        form.errors.title = T("Existe un recurso con este t\xc3\xadtulo, para este a\xc3\xb1o y tipo")\n        form.errors.rtype = T("Existe un recurso con este tipo, para este a\xc3\xb1o y t\xc3\xadtulo")\n        form.errors.year = T("Existe un recurso con este a\xc3\xb1o, para este t\xc3\xadtulo y tipo")\n        return True\n    return False\n\n@auth.requires_login()\ndef edites():\n    """\n    Grid to edit resource in edition or rechazed state\n    """\n\n    links=[]\n\n    if "edit" in request.args:\n\n        links.append({\'header\': T(\'Extract\'), \'body\': lambda row: A(XML(\'<i class="glyphicon glyphicon-plus"></i> \'), _class="btn btn-info btn-menu", _href=URL(args=request.args, vars=dict(option="metadata"), user_signature=True, hash_vars=False),**{\'_data-toggle\': "tooltip", \'_title\': T("Extract metadata file"), \'_data-placement\': "top"})})\n\n        links.append({\'header\': T(\'Take coverpage\'), \'body\': lambda row: A(XML(\'<i class="glyphicon glyphicon-camera"></i> \'), _class="btn btn-info btn-menu", _href=URL(args=request.args, vars=dict(option="coverpage"), user_signature=True, hash_vars=False), **{\'_data-toggle\': "tooltip", \'_title\': T("Take coverpage image"), \'_data-placement\': "top"})})\n\n        if request.vars.option:\n            __extract(db.resource(request.args(-1)), request.vars.option)\n\n    selectable = lambda ids: db(db.resource.id.belongs(ids)).delete()\n\n    query = (db.resource.created_by == auth.user.id)\n    left = (db.resource.on((db.resource.state == db.state.id) & ((db.state.name == "Editar") | (db.state.name == "Rechazar"))))\n    fields = [db.resource.id, db.resource.resource, db.resource.title, db.resource.state, db.resource.language, db.resource.category, db.resource.rtype, db.resource.year]\n\n    grid = SQLFORM.grid(query, left=left, onvalidation=lambda form : __resource_exist(form, request.args(-1)), selectable=selectable, fields=fields, links=links, orderby=~db.resource.id, create=False, advanced_search=False, links_in_grid=False, selectable_submit_button=T(\'Delete\'))\n\n    heading=grid.elements(\'th\')\n    if heading:\n           heading[0].append(INPUT(_type=\'checkbox\', _onclick="$(\'input[type=checkbox]\').each(function(k){$(this).attr(\'checked\', \'checked\');});"))\n\n    response.title = T("Editar") + response.title\n    response.flash = T("Editar")\n\n    return dict(grid=grid)\n\ndef __extract(resource, option):\n    \'\'\'\n    Funci\xc3\xb3n auxiliar que permite extraer los metadatos o extraer imagen del cover de un recurso en edici\xc3\xb3n\n    \'\'\'\n\n    if  option == "coverpage":\n        try:\n            classResource = app_resource.resourceMetadata(resource.resource)\n            resource.coverpag = classResource.coverpage()[\'coverpag\']\n            resource.update_record()\n            response.flash = T("Take image")\n        except Exception, e:\n            response.flash = T("Failed to take image")\n    elif option == "metadata":\n        try:\n            classResource = app_resource.resourceMetadata(resource.resource)\n            resource_metadata = classResource.getMetadata()\n            resource.year_update = resource_metadata[\'year_update\']\n            resource.mime_type = resource_metadata[\'mime_type\']\n            resource.keyword = resource_metadata[\'keyword\']\n            resource.title = resource_metadata[\'title\']\n            resource.author = resource_metadata[\'author\']\n            resource.year = resource_metadata[\'year\']\n            resource.pages = resource_metadata[\'pages\']\n            resource.unit = resource_metadata[\'unit\']\n            resource.size = resource_metadata[\'size\']\n            resource.update_record()\n            response.flash = T("Extract metadata")\n        except Exception, e:\n            response.flash = T("Failed to extract metadata")\n    else:\n        response.flash = T("Error option not found")\n\n@auth.requires_membership("Administrador")\ndef admin_table():\n    """\n    Administrate tables\n    """\n    table = request.args(0) or \'auth_user\'\n    if not table in db.tables(): grid=None\n\n    selectable = lambda ids: db(db[table].id.belongs(ids)).delete()\n\n    grid = SQLFORM.smartgrid(db[table], args=request.args[:1], linked_tables=[], advanced_search=False, selectable=selectable, selectable_submit_button=T(\'Delete\'))\n\n    heading=grid.elements(\'th\')\n    if heading:\n           heading[0].append(INPUT(_type=\'checkbox\', _onclick="jQuery(\'input[type=checkbox]\').each(function(k){jQuery(this).attr(\'checked\', \'checked\');});"))\n\n    response.title = T(table.replace("_", " ").capitalize()) + response.title\n    response.flash = T(table.replace("_", " ").capitalize())\n\n    return dict(grid=grid)\n\n@auth.requires_membership("Administrador")\ndef upload_multiple():\n    """\n    Function for upload multiples resources\n    """\n\n    form = SQLFORM(db.resource, fields=[\'rtype\', "category", \'resource\'], labels={\'resource\': T(\'Recurso\'), \'rtype\': T(\'Type\'), \'category\': T(\'Category\')}, submit_button=T(\'Upload all\'))\n\n    response.title = T("Upload Multiple") + response.title\n    response.flash = T("Upload multiple files")\n    return dict(form=form)\n\n@auth.requires_membership("Administrador")\ndef admin():\n    """\n    Administrate resources\n    """\n\n    links=[]\n    selectable=orderby=fields=onvalidation=None\n\n    if "review.resource" in request.args:\n        selectable = lambda ids: db(db.review.id.belongs(ids)).delete()\n        fields = [db.review.id, db.review.success, db.review.note]\n        response.title = T("Administrate reviews") + response.title\n        response.flash = T("Administrate reviews")\n    else:\n        response.flash = T("Administrate resources")\n\n        if "edit" in request.args:\n            onvalidation = lambda form : __resource_exist(form, request.args(-1))\n            links.append({\'header\': T(\'Extract\'), \'body\': lambda row: A(XML(\'<i class="glyphicon glyphicon-plus"></i> \'), _class="btn btn-info btn-menu", _href=URL(args=request.args, vars=dict(option="metadata"), user_signature=True, hash_vars=False),**{\'_data-toggle\': "tooltip", \'_title\': T("Extract metadata file"), \'_data-placement\': "top"})})\n\n            links.append({\'header\': T(\'Take coverpage\'), \'body\': lambda row: A(XML(\'<i class="glyphicon glyphicon-camera"></i> \'), _class="btn btn-info btn-menu", _href=URL(args=request.args, vars=dict(option="coverpage"), user_signature=True, hash_vars=False), **{\'_data-toggle\': "tooltip", \'_title\': T("Take coverpage image"), \'_data-placement\': "top"})})\n\n            if request.vars.option:\n                __extract(db.resource(request.args[-1]), request.vars.option)\n\n        selectable = lambda ids: db(db.resource.id.belongs(ids)).delete()\n        fields = [db.resource.id, db.resource.resource, db.resource.title, db.resource.publisher, db.resource.year, db.resource.rtype, db.resource.category, db.resource.state, db.resource.votes]\n        orderby=~db.resource.id\n        response.title = T("Administrate Resource") + response.title\n\n    grid = SQLFORM.smartgrid(db.resource, fields=fields, onvalidation=onvalidation, create=False, links=links, selectable=selectable, linked_tables=[\'review\'], links_in_grid=False, ignore_rw=True, orderby=orderby, selectable_submit_button=T(\'Delete\'))\n\n    heading=grid.elements(\'th\')\n    if heading:\n        heading[0].append(INPUT(_type=\'checkbox\', _onclick="jQuery(\'input[type=checkbox]\').each(function(k){jQuery(this).attr(\'checked\', \'checked\');});"))\n\n    return dict(grid=grid)\n\n@auth.requires_signature()\ndef upload_file():\n    """\n    File upload handler for the ajax form of the plugin jquery-file-upload\n    Return the response in JSON required by the plugin\n    """\n    try:\n        import re\n        from gluon.serializers import json\n\n        resource_file = request.vars[\'files[]\']\n        resource_type = re.compile(\'^(\\s|\\.|-|\\w|\xc3\xa1|\xc3\xa9|\xc3\xad|\xc3\xb3|\xc3\xba|\xc3\xb1|\xc3\x81|\xc3\x89|\xc3\x8d|\xc3\x93|\xc3\x9a|\xc3\x91){1,40}\\.(pdf|epub|png)$\')\n        filename = resource_file.filename\n\n        if resource_type.match(filename):\n            # Store file\n            id = db.resource.insert(resource = db.resource.resource.store(resource_file, filename), title=filename)\n            response.flash= CAT(T("I uploaded resource named "), filename)\n            return response.json(json({"name": filename, "success": True, "url": URL(\'resource\', \'edites\', args=[\'edit\', \'resource\', id], user_signature=True)}))\n        else:\n            return response.json(json({"name": filename, "success": False, "message": T("Invalid file name")}))\n\n    except Exception, e:\n        response.flash= T("Failed uploading file")\n        return response.json(json({"name": resource_file.filename, "success": False, "message": str(e)}))\n\n@auth.requires_signature()\ndef admin_upload_file():\n    """\n    File upload handler for the ajax form of the plugin jquery-file-upload\n    Return the response in JSON required by the plugin\n    """\n    try:\n        import re\n        from gluon.serializers import json\n\n        resource_file = request.vars[\'files[]\']\n        resource_type = re.compile(\'^(\\s|\\.|-|\\w|\xc3\xa1|\xc3\xa9|\xc3\xad|\xc3\xb3|\xc3\xba|\xc3\xb1|\xc3\x81|\xc3\x89|\xc3\x8d|\xc3\x93|\xc3\x9a|\xc3\x91){1,40}\\.(pdf|epub|png)$\')\n        filename = resource_file.filename\n\n        if resource_type.match(filename):\n            # Store file\n            id = db.resource.insert(resource = db.resource.resource.store(request.vars[\'files[]\'], request.vars[\'files[]\'].filename), title=request.vars[\'files[]\'].filename, category=request.vars[\'category\'], rtype=request.vars[\'rtype\'])\n            response.flash= CAT(T("I uploaded resource named"), " ", request.vars[\'files[]\'].filename)\n            return response.json(json({True}))\n        else:\n            response.flash= CAT(T("Error filename"), " ", request.vars[\'files[]\'].filename)\n            return response.json(json({False}))\n    except:\n        response.flash= T("Failed uploading file")\n        return response.json(json({False}))\n\ndef download_component():\n    \'\'\'\n    Funci\xc3\xb3n llamada por ajax que permite actualizar el n\xc3\xbamero de descargas\n    \'\'\'\n    if not URL.verify(request, hmac_key=KEY): raise HTTP(403)\n    import gluon.contrib.simplejson\n    if request.ajax:\n        resource = db.resource(request.vars.resource)\n        if resource:\n            resource.downloads = resource.downloads + 1\n            resource.modified_on = resource.modified_on\n            resource.update_record()\n            response.headers[\'web2py-component-flash\'] = T("Descargando...")\n            return gluon.contrib.simplejson.dumps({\'success\': True, \'download\': resource.downloads, \'resource\': resource.id})\n        else:\n            response.headers[\'web2py-component-flash\'] = T("Error en descarga, no se encontr\xc3\xb3 recurso")\n            return gluon.contrib.simplejson.dumps({\'success\': False})\n    else:\n        response.headers[\'web2py-component-flash\'] = T("Error en descarga")\n        return gluon.contrib.simplejson.dumps({\'success\': False})\n\ndef visit_component():\n    \'\'\'\n    Funci\xc3\xb3n llamada por ajax que permite actualizar el n\xc3\xbamero de visitas\n    \'\'\'\n    if not URL.verify(request, hmac_key=KEY): raise HTTP(403)\n    import gluon.contrib.simplejson\n    if request.ajax:\n        resource = db.resource(request.vars.resource)\n        if resource:\n            resource.visits = resource.visits + 1\n            resource.modified_on = resource.modified_on\n            resource.update_record()\n            return gluon.contrib.simplejson.dumps({\'success\': True, \'visit\': resource.visits, \'resource\': resource.id})\n        else:\n            response.headers[\'web2py-component-flash\'] = T("Error no se encontr\xc3\xb3 recurso")\n            return gluon.contrib.simplejson.dumps({\'success\': False})\n    else:\n        response.headers[\'web2py-component-flash\'] = T("Error en visita")\n        return gluon.contrib.simplejson.dumps({\'success\': False})\n\n@auth.requires_signature()\ndef like_component():\n    \'\'\'\n    Funci\xc3\xb3n llamada por ajax que permite actualizar el n\xc3\xbamero de descargas\n    \'\'\'\n    import gluon.contrib.simplejson\n    if request.ajax:\n        resource = db.resource(request.vars.resource)\n        if resource:\n            if auth.user.id in resource.votes_user:\n                resource.votes_user.remove(auth.user.id)\n                response.headers[\'web2py-component-flash\'] = T("Unlike")\n            else:\n                resource.votes_user.append(auth.user.id)\n                response.headers[\'web2py-component-flash\'] = T("Like")\n\n            resource.modified_on = resource.modified_on\n            resource.votes = len(resource.votes_user)\n            resource.update_record()\n\n            return gluon.contrib.simplejson.dumps({\'success\': True, \'votes\': resource.votes, \'resource\': resource.id})\n        else:\n            response.headers[\'web2py-component-flash\'] = T("Error no se encontr\xc3\xb3 recurso")\n            return gluon.contrib.simplejson.dumps({\'success\': False})\n    else:\n        response.headers[\'web2py-component-flash\'] = T("Error en la votaci\xc3\xb3n")\n        return gluon.contrib.simplejson.dumps({\'success\': False})\n\ndef get_informations():\n    \'\'\'\n    Funci\xc3\xb3n llamada por ajax que permite actualizar la cantidad de recursos publicados y usuarios del sistema\n    \'\'\'\n    if not URL.verify(request, hmac_key=KEY): raise HTTP(403)\n    import gluon.contrib.simplejson\n    if request.ajax:\n        state_id = db(db.state.name == "Publicar").select(db.state.id, cache=(cache.ram, 86400)).first()\n        count_resources = db(db.resource.state == state_id).count(cache=(cache.ram, 5))\n        count_users = db(db.auth_user.id > 0).count(cache=(cache.ram, 5))\n\n        count_downloads = vv = db((db.resource.state == state_id) & (db.resource.downloads > 0)).select(db.resource.downloads.sum(), cache=(cache.ram, 5)).first()[db.resource.downloads.sum()]\n\n        return gluon.contrib.simplejson.dumps({\'resources\': count_resources, \'users\': count_users, \'downloads\': count_downloads})\n    else:\n        return gluon.contrib.simplejson.dumps({\'resources\': 0, \'users\': 0, \'downloads\': 0})\n\n\ndef title_selection():\n    \'\'\'\n    B\xc3\xbasqueda r\xc3\xa1pida\n    \'\'\'\n    if not URL.verify(request, hmac_key=KEY): raise HTTP(403)\n\n    if not request.vars.q:\n        return \'\'\n\n    pattern = request.vars.q + \'%\'\n    state = db(db.state.name == "Publicar").select(db.state.id, cache=(cache.ram, 86400)).first()\n    query = db.resource.state == state.id\n\n    query &= db.resource.title.like(pattern)\n\n    q=c=t=y=i=""\n\n    if request.vars.q:\n        q=request.vars.q\n\n    if request.vars.c:\n        query &= db.resource.category == int(request.vars.c)\n        c=request.vars.c\n\n    if request.vars.t:\n        query &= db.resource.rtype == int(request.vars.t)\n        t=request.vars.t\n\n    if request.vars.y:\n        query &= db.resource.year == int(request.vars.y)\n        y=request.vars.y\n\n    selections = [registro for registro in\n                     db(query).select(db.resource.id, db.resource.title, limitby=(0,5))]\n    return \'\'.join([LI(A(k.title, _href=URL(\'resource\', \'search_component.load\', vars=dict(q=q, c=c, t=t, y=y, i=k.id)), **{"_data-w2p_disable_with": "default", "_data-w2p_method": "GET", "_data-w2p_target": request.vars.cid})).xml() for k in selections])\n\n@cache.action()\ndef download():\n    """\n    Download upload field\n    """\n    return response.download(request, db)\n\nresponse._vars=response._caller(multiple_downloads)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.ValueError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.ValueError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.ValueError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.ValueError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.ValueError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.ValueError object>'
p23
sS'args'
p24
S'("invalid literal for long() with base 10: \'||\'",)'
p25
sS'__reduce__'
p26
S'<built-in method __reduce__ of exceptions.ValueError object>'
p27
sS'__str__'
p28
S"<method-wrapper '__str__' of exceptions.ValueError object>"
p29
sS'__format__'
p30
S'<built-in method __format__ of exceptions.ValueError object>'
p31
sS'__getattribute__'
p32
S"<method-wrapper '__getattribute__' of exceptions.ValueError object>"
p33
sS'__class__'
p34
S"<type 'exceptions.ValueError'>"
p35
sS'__unicode__'
p36
S'<built-in method __unicode__ of exceptions.ValueError object>'
p37
sS'__delattr__'
p38
S"<method-wrapper '__delattr__' of exceptions.ValueError object>"
p39
sS'__subclasshook__'
p40
S'<built-in method __subclasshook__ of type object>'
p41
sS'__repr__'
p42
S"<method-wrapper '__repr__' of exceptions.ValueError object>"
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.ValueError object>'
p47
sS'__doc__'
p48
S"'Inappropriate argument value (of correct type).'"
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.ValueError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S"invalid literal for long() with base 10: '||'"
p55
sS'request'
p56
cgluon.html
XML_unpickle
p57
(S'sE^\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>cvrf</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>resource</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_admin</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-9f0b83ff-ef23-4883-bfde-1c5bf3d1e35b<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_cvrf</td><td style="vertical-align:top;">:</td><td><div>27:f54634da-2736-43fb-94f7-3e5b47e37637<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_welcome</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-6375952a-adcf-48b5-b683-f0512f227dde<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate, sdch, br</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>es-ES,es;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CACHE_CONTROL</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_COOKIE</td><td style="vertical-align:top;">:</td><td><div>session_id_welcome=127.0.0.1-6375952a-adcf-48b5-b683-f0512f227dde; session_id_cvrf=&quot;27:f54634da-2736-43fb-94f7-3e5b47e37637&quot;; session_id_admin=127.0.0.1-9f0b83ff-ef23-4883-bfde-1c5bf3d1e35b</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_REFERER</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/cvrf/resource/my_briefcase</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_UPGRADE_INSECURE_REQUESTS</td><td style="vertical-align:top;">:</td><td><div>1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/56.0.2924.76 Chrome/56.0.2924.76 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/cvrf/resource/multiple_downloads</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>36086</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>yasmany-tp500lab</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/opt/python/web2py/web2py/applications/cvrf/&#x27;, &#x27;/opt/python/web2py/web2py/applications/admin/&#x27;, &#x27;/opt/python/web2py/web2py/applications/observatorio/&#x27;, &#x27;/opt/python/web2py/web2py/applications/welcome/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/opt/python/web2py/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x7f2a01860f80: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;yasmany-tp500lab&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;port&#x27;: 8000, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/opt/python/web2py/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;******&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;observatorio&#x27;, &#x27;cvrf&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/opt/python/web2py/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate, sdch, br</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>es-ES,es;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cache_control</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cookie</td><td style="vertical-align:top;">:</td><td><div>session_id_welcome=127.0.0.1-6375952a-adcf-48b5-b683-f0512f227dde; session_id_cvrf=&quot;27:f54634da-2736-43fb-94f7-3e5b47e37637&quot;; session_id_admin=127.0.0.1-9f0b83ff-ef23-4883-bfde-1c5bf3d1e35b</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_referer</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/cvrf/resource/my_briefcase</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_upgrade_insecure_requests</td><td style="vertical-align:top;">:</td><td><div>1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/56.0.2924.76 Chrome/56.0.2924.76 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>yasmany-tp500lab</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>yasmany-TP500LAB</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/cvrf/resource/multiple_downloads</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>36086</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/cvrf/resource/multiple_downloads</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>yasmany-tp500lab</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>/opt/python/web2py/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.14.6-stable+timestamp.2016.05.10.00.21.47</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7f2a08b161e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x7f2a018f1f58&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7f29b8f1bd50&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7f2a08b161e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x7f2a018f1f58&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7f29b8f1bd50&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>/opt/python/web2py/web2py/applications/cvrf/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>multiple_downloads</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/opt/python/web2py/web2py/applications/cvrf/&#x27;, &#x27;/opt/python/web2py/web2py/applications/admin/&#x27;, &#x27;/opt/python/web2py/web2py/applications/observatorio/&#x27;, &#x27;/opt/python/web2py/web2py/applications/welcome/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/opt/python/web2py/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x7f2a01860f80: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;yasmany-tp500lab&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;port&#x27;: 8000, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/opt/python/web2py/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;******&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;observatorio&#x27;, &#x27;cvrf&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/opt/python/web2py/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>yasmany-tp500lab</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>yasmany-TP500LAB</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.14.6-stable+timestamp.2016.05.10.00.21.47</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_scheduler</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_shell</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2017, 3, 23, 12, 41, 28, 889210)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_args</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_extension</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/cvrf/resource/multiple_downloads</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2017, 3, 23, 16, 41, 28, 889228)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x7f299fcde3d0&gt;</div></td></tr></table></div>'
tRp58
sS'frames'
p59
(lp60
(dp61
S'file'
p62
S'/opt/python/web2py/web2py/gluon/restricted.py'
p63
sS'dump'
p64
(dp65
S'environment'
p66
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, ...}"
p67
sS'ccode'
p68
S'<code object <module> at 0x7f299f897730, file "/...plications/cvrf/controllers/resource.py", line 3>'
p69
ssS'lnum'
p70
I227
sS'lines'
p71
(dp72
I224
S'            ccode = code'
p73
sI225
S'        else:'
p74
sI226
S'            ccode = compile2(code, layer)'
p75
sI227
S'        exec ccode in environment'
p76
sI228
S'    except HTTP:'
p77
sI229
S'        raise'
p78
sI230
S'    except RestrictedError:'
p79
sI231
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p80
sI222
S'    try:'
p81
sI223
S'        if isinstance(code, types.CodeType):'
p82
ssS'call'
p83
S"(code='# -*- coding: utf-8 -*-\\n# intente algo como\\ndef ...ponse._vars=response._caller(multiple_downloads)\\n', environment={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, ...}, layer='/opt/python/web2py/web2py/applications/cvrf/controllers/resource.py')"
p84
sS'func'
p85
S'restricted'
p86
sa(dp87
g62
S'/opt/python/web2py/web2py/applications/cvrf/controllers/resource.py'
p88
sg64
(dp89
sg70
I607
sg71
(dp90
I596
S'    selections = [registro for registro in'
p91
sI597
S'                     db(query).select(db.resource.id, db.resource.title, limitby=(0,5))]'
p92
sI598
S'    return \'\'.join([LI(A(k.title, _href=URL(\'resource\', \'search_component.load\', vars=dict(q=q, c=c, t=t, y=y, i=k.id)), **{"_data-w2p_disable_with": "default", "_data-w2p_method": "GET", "_data-w2p_target": request.vars.cid})).xml() for k in selections])'
p93
sI599
S''
sI600
S'@cache.action()'
p94
sI601
S'def download():'
p95
sI602
S'    """'
p96
sI603
S'    Download upload field'
p97
sI604
S'    """'
p98
sI605
S'    return response.download(request, db)'
p99
ssg83
S'()'
p100
sg85
S'<module>'
p101
sa(dp102
g62
S'/opt/python/web2py/web2py/gluon/globals.py'
p103
sg64
(dp104
S'self'
p105
S'undefined'
p106
sS'f'
S'<function multiple_downloads>'
p107
ssg70
I417
sg71
(dp108
I416
S'        self._vars = None'
p109
sI417
S'        self._caller = lambda f: f()'
p110
sI418
S'        self._view_environment = None'
p111
sI419
S'        self._custom_commit = None'
p112
sI420
S'        self._custom_rollback = None'
p113
sI421
S"        self.generic_patterns = ['*']"
p114
sI412
S"        self.flash = ''            # used by the default view layout"
p115
sI413
S'        self.meta = Storage()      # used by web2py_ajax.html'
p116
sI414
S'        self.menu = []             # used by the default view layout'
p117
sI415
S'        self.files = []            # used by web2py_ajax.html'
p118
ssg83
S'(f=<function multiple_downloads>)'
p119
sg85
S'<lambda>'
p120
sa(dp121
g62
S'/opt/python/web2py/web2py/gluon/tools.py'
p122
sg64
(dp123
S'action'
p124
S'<function multiple_downloads>'
p125
sS'a'
S'()'
p126
sS'b'
g45
ssg70
I4241
sg71
(dp127
I4236
S'                    flag = condition'
p128
sI4237
S'                if not flag:'
p129
sI4238
S'                    current.session.flash = self.messages.access_denied'
p130
sI4239
S'                    return call_or_redirect('
p131
sI4240
S'                        self.settings.on_failed_authorization)'
p132
sI4241
S'                return action(*a, **b)'
p133
sI4242
S'            f.__doc__ = action.__doc__'
p134
sI4243
S'            f.__name__ = action.__name__'
p135
sI4244
S'            f.__dict__.update(action.__dict__)'
p136
sI4245
S'            return f'
p137
ssg83
S'(*a=(), **b={})'
p138
sg85
S'f'
sa(dp139
g62
S'/opt/python/web2py/web2py/applications/cvrf/controllers/resource.py'
p140
sg64
(dp141
S'register.modified_on'
p142
S'datetime.datetime(2017, 3, 23, 12, 19, 51)'
p143
sS'db.resource.id'
p144
S'<pydal.objects.Field object>'
p145
sS'register.downloads'
p146
S'0L'
p147
sS'downloads'
p148
g106
sS'db.resource'
p149
S'<Table resource (id, resource, coverpag, title, ...reated_on, created_by, modified_on, modified_by)>'
p150
sS'modified_on'
p151
g106
sS').update'
p152
g106
sS'global db'
p153
S'<DAL uri="sqlite://storage.sqlite1">'
p154
sS'register.id'
p155
S'93L'
p156
sS'register'
p157
S"<Row {'category': 2L, 'resource': 'resource.reso...19, 51), 'review': <Set (review.resource = 93)>}>"
p158
ssg70
I265
sg71
(dp159
I260
S'        if register.mime_type == "epub+zip":'
p160
sI261
S'            files.write(fullpath, register.category.name+"/"+register.title+\'.epub\')'
p161
sI262
S'        else:'
p162
sI263
S'            files.write(fullpath, register.category.name+"/"+register.title+\'.\'+register.mime_type)'
p163
sI264
S''
sI265
S'        db(db.resource.id == register.id).update(downloads = register.downloads + 1, modified_on = register.modified_on)'
p164
sI266
S''
sI267
S'    files.close()'
p165
sI268
S"    response.headers['Content-Type'] = 'application/zip'"
p166
sI269
S"    response.headers['Content-Disposition'] = CAT('attachment=True; filename=', T('my_briefcase'), '.zip')"
p167
ssg83
S'()'
p168
sg85
S'multiple_downloads'
p169
sa(dp170
g62
S'/opt/python/web2py/web2py/gluon/packages/dal/pydal/objects.py'
p171
sg64
(dp172
S'table._tablename'
p173
S"'resource'"
p174
sS'db._adapter'
p175
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p176
sS'fields'
p177
S'[(<pydal.objects.Field object>, datetime.datetime(2017, 3, 23, 12, 19, 51)), (<pydal.objects.Field object>, 1L), (<pydal.objects.Field object>, <function lazy_user>), (<pydal.objects.Field object>, [])]'
p178
sS'self'
p179
S'<Set (resource.id = 93)>'
p180
sS'db'
p181
S'<DAL uri="sqlite://storage.sqlite1">'
p182
sS'self.query'
p183
S'<Query (resource.id = 93)>'
p184
sS'ret'
p185
g106
sS'table'
p186
S'<Table resource (id, resource, coverpag, title, ...reated_on, created_by, modified_on, modified_by)>'
p187
sS'db._adapter.update'
p188
S'<bound method SQLiteAdapter.update of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p189
ssg70
I2054
sg71
(dp190
I2049
S'        if any(f(self, update_fields) for f in table._before_update):'
p191
sI2050
S'            return 0'
p192
sI2051
S'        fields = table._listify(update_fields, update=True)'
p193
sI2052
S'        if not fields:'
p194
sI2053
S'            raise SyntaxError("No fields to update")'
p195
sI2054
S'        ret = db._adapter.update("%s" % table._tablename, self.query, fields)'
p196
sI2055
S'        ret and [f(self, update_fields) for f in table._after_update]'
p197
sI2056
S'        return ret'
p198
sI2057
S''
sI2058
S'    def update_naive(self, **update_fields):'
p199
ssg83
S"(self=<Set (resource.id = 93)>, **update_fields={'downloads': 1L, 'modified_by': <function lazy_user>, 'modified_on': datetime.datetime(2017, 3, 23, 12, 19, 51)})"
p200
sg85
S'update'
p201
sa(dp202
g62
S'/opt/python/web2py/web2py/gluon/packages/dal/pydal/adapters/base.py'
p203
sg64
(dp204
S'self._update'
p205
S'<bound method SQLiteAdapter._update of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p206
sS'fields'
p207
S'[(<pydal.objects.Field object>, datetime.datetime(2017, 3, 23, 12, 19, 51)), (<pydal.objects.Field object>, 1L), (<pydal.objects.Field object>, <function lazy_user>), (<pydal.objects.Field object>, [])]'
p208
sS'self'
p209
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p210
sS'tablename'
p211
S"'resource'"
p212
sS'sql'
p213
g106
sS'query'
p214
S'<Query (resource.id = 93)>'
p215
ssg70
I1023
sg71
(dp216
I1024
S'        try:'
p217
sI1025
S'            self.execute(sql)'
p218
sI1026
S'        except Exception:'
p219
sI1027
S'            e = sys.exc_info()[1]'
p220
sI1018
S'                              for (field, value) in fields])'
p221
sI1019
S'        tablename = self.db[tablename].sqlsafe'
p222
sI1020
S"        return 'UPDATE %s SET %s%s;' % (tablename, sql_v, sql_w)"
p223
sI1021
S''
sI1022
S'    def update(self, tablename, query, fields):'
p224
sI1023
S'        sql = self._update(tablename, query, fields)'
p225
ssg83
S"(self=<pydal.adapters.sqlite.SQLiteAdapter object>, tablename='resource', query=<Query (resource.id = 93)>, fields=[(<pydal.objects.Field object>, datetime.datetime(2017, 3, 23, 12, 19, 51)), (<pydal.objects.Field object>, 1L), (<pydal.objects.Field object>, <function lazy_user>), (<pydal.objects.Field object>, [])])"
p226
sg85
g201
sa(dp227
g62
S'/opt/python/web2py/web2py/gluon/packages/dal/pydal/adapters/base.py'
p228
sg64
(dp229
S'field'
p230
S'<pydal.objects.Field object>'
p231
sS'value'
p232
S'[]'
p233
sS'fields'
p234
S'[(<pydal.objects.Field object>, datetime.datetime(2017, 3, 23, 12, 19, 51)), (<pydal.objects.Field object>, 1L), (<pydal.objects.Field object>, <function lazy_user>), (<pydal.objects.Field object>, [])]'
p235
ssg70
I1018
sg71
(dp236
I1013
S"            sql_w = ' WHERE ' + self.expand(query)"
p237
sI1014
S'        else:'
p238
sI1015
S"            sql_w = ''"
p239
sI1016
S"        sql_v = ','.join(['%s=%s' % (field.sqlsafe_name,"
p240
sI1017
S'                                     self.expand(value, field.type)) \\'
p241
sI1018
S'                              for (field, value) in fields])'
p242
sI1019
S'        tablename = self.db[tablename].sqlsafe'
p243
sI1020
S"        return 'UPDATE %s SET %s%s;' % (tablename, sql_v, sql_w)"
p244
sI1021
S''
sI1022
S'    def update(self, tablename, query, fields):'
p245
ssg83
S"(self=<pydal.adapters.sqlite.SQLiteAdapter object>, tablename='resource', query=<Query (resource.id = 93)>, fields=[(<pydal.objects.Field object>, datetime.datetime(2017, 3, 23, 12, 19, 51)), (<pydal.objects.Field object>, 1L), (<pydal.objects.Field object>, <function lazy_user>), (<pydal.objects.Field object>, [])])"
p246
sg85
S'_update'
p247
sa(dp248
g62
S'/opt/python/web2py/web2py/gluon/packages/dal/pydal/adapters/base.py'
p249
sg64
(dp250
S'self.represent'
p251
S'<bound method SQLiteAdapter.represent of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p252
sS'rv'
p253
g106
sS'expression'
p254
S'[]'
p255
sS'self'
p256
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p257
sS'field_type'
p258
S"'integer'"
p259
ssg70
I962
sg71
(dp260
I960
S'                rv = op()'
p261
sI961
S'        elif field_type:'
p262
sI962
S'            rv = self.represent(expression, field_type)'
p263
sI963
S'        elif isinstance(expression, (list, tuple)):'
p264
sI964
S"            rv = ','.join(self.represent(item, field_type)"
p265
sI965
S'                          for item in expression)'
p266
sI966
S'        elif isinstance(expression, bool):'
p267
sI957
S'                    op = op[:-1]'
p268
sI958
S"                rv = '(%s)' % op"
p269
sI959
S'            else:'
p270
ssg83
S"(self=<pydal.adapters.sqlite.SQLiteAdapter object>, expression=[], field_type='integer', colnames=False)"
p271
sg85
S'expand'
p272
sa(dp273
g62
S'/opt/python/web2py/web2py/gluon/packages/dal/pydal/adapters/base.py'
p274
sg64
(dp275
S'builtinstr'
p276
S"<type 'str'>"
p277
sS'global long'
p278
S"<type 'long'>"
p279
sS'obj'
p280
S"'||'"
p281
ssg70
I1435
sg71
(dp282
I1430
S"            if obj and not str(obj)[:1].upper() in '0F':"
p283
sI1431
S'                return self.smart_adapt(self.TRUE)'
p284
sI1432
S'            else:'
p285
sI1433
S'                return self.smart_adapt(self.FALSE)'
p286
sI1434
S"        if fieldtype == 'id' or fieldtype == 'integer':"
p287
sI1435
S'            return str(long(obj))'
p288
sI1436
S"        if field_is_type('decimal'):"
p289
sI1437
S'            return str(obj)'
p290
sI1438
S"        elif field_is_type('reference'): # reference"
p291
sI1439
S'            # check for tablename first'
p292
ssg83
S"(self=<pydal.adapters.sqlite.SQLiteAdapter object>, obj='||', fieldtype='integer')"
p293
sg85
S'represent'
p294
sasS'pyver'
p295
S'Python 2.7.12: /usr/bin/python (prefix: /usr)'
p296
sS'session'
p297
g57
(S's\x1f\x0f\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">auth</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">expiration</td><td style="vertical-align:top;">:</td><td><div>3600</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">hmac_key</td><td style="vertical-align:top;">:</td><td><div>c9427360-d6e4-4648-99b2-81ec61828608</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_visit</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2017, 3, 23, 12, 40, 58, 258595)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remember_me</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">categories</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>3L</div></td></tr><tr><td><div>2L</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">categories_review</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>3L</div></td></tr><tr><td><div>2L</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">conected</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">email</td><td style="vertical-align:top;">:</td><td><div>danilo@upr.edu.cu</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">first_name</td><td style="vertical-align:top;">:</td><td><div>Danilo</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">id</td><td style="vertical-align:top;">:</td><td><div>3L</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_name</td><td style="vertical-align:top;">:</td><td><div>Pereda</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">notification</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">photo</td><td style="vertical-align:top;">:</td><td><div>auth_user.photo.9e2c78185232970b.757365722d69636f6e2d362e706e67.png</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">registration_id</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">registration_key</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">reset_password_key</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">types</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>2L</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">username</td><td style="vertical-align:top;">:</td><td><div>danilo</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user_groups</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">1</td><td style="vertical-align:top;">:</td><td><div>Administrador</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">2</td><td style="vertical-align:top;">:</td><td><div>Revisor</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">3</td><td style="vertical-align:top;">:</td><td><div>Editor</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">4</td><td style="vertical-align:top;">:</td><td><div>Publicador</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr></table></div>'
tRp298
sS'etype'
p299
S"<type 'exceptions.ValueError'>"
p300
sS'date'
p301
S'Thu Mar 23 12:41:29 2017'
p302
sS'response'
p303
g57
(S'sg3\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x7f299feffea0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_cvrf</td><td style="vertical-align:top;">:</td><td><div>27:f54634da-2736-43fb-94f7-3e5b47e37637<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">form_label_separator</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">formstyle</td><td style="vertical-align:top;">:</td><td><div>bootstrap3_inline</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>*</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">google_analytics_id</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">logo</td><td style="vertical-align:top;">:</td><td><div><h5><a class="navbar-brand-name" data-target="#index" href="/cvrf/default/index" id="index"><img class="logo" src="/cvrf/static/img/favicon.png" /></a></h5></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div><table><tr><td><div>home</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div><a data-target="#homepage" href="/cvrf/default/index#homepage">Inicio</a></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>services</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div><a data-target="#services" href="/cvrf/default/index#services">Servicios</a></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>about</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div><a data-target="#about" href="/cvrf/default/index#about">Acerca de</a></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>information</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div><a data-target="#information" href="/cvrf/default/index#information">Contact us</a></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Administration</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/cvrf/default/dashboard</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>user_roles</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div><a data-target="#user_roles" href="/cvrf/admin/user_roles"><ico class="glyphicon glyphicon-user"></ico> Users</a></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>website</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div><a data-target="#website" href="/cvrf/admin/website"><ico class="glyphicon glyphicon-home"></ico> Website</a></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>admin</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div><a data-target="#admin" href="/cvrf/resource/admin"><ico class="glyphicon glyphicon-book"></ico> Resources</a></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>upload</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div><a data-target="#upload_multiple" href="/cvrf/resource/upload_multiple"><ico class="glyphicon glyphicon-upload"></ico> Multiple Uploads</a></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>manage</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div><a data-target="#manage" href="/cvrf/appadmin/index"><ico class="glyphicon glyphicon-lock"></ico> Appadmin</a></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>category</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div><a data-target="#category" href="/cvrf/admin/category"><ico class="glyphicon glyphicon-tags"></ico> Categories</a></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>scheduler_task</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div><a data-target="#scheduler_task" href="/cvrf/admin/scheduler_task"><ico class="glyphicon glyphicon-tasks"></ico> Scheduler Task</a></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>rtype</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div><a data-target="#rtype" href="/cvrf/admin/table/rtype"><ico class="glyphicon glyphicon-tag"></ico> Types</a></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>language</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div><a data-target="#language" href="/cvrf/resource/admin_table/language"><ico class="glyphicon glyphicon-flag"></ico> Language</a></div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Edition</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/cvrf/default/dashboard</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>admin_news</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div><a data-target="#admin_news" href="/cvrf/blog/admin_news"><ico class="glyphicon glyphicon-envelope"></ico> Administrar noticias</a></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>admin_forum</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div><a data-target="#admin_forum" href="/cvrf/forum/admin_forum"><ico class="glyphicon glyphicon-comment"></ico> Administrar foro</a></div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Resource</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/cvrf/default/dashboard</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>dashboard</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div><a data-target="#dashboard" href="/cvrf/default/dashboard"><ico class="glyphicon glyphicon-home"></ico> Dashboard</a></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>upload</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div><a data-target="#edites" href="/cvrf/resource/edites"><ico class="glyphicon glyphicon-upload"></ico> Upload and edit</a></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>resources</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div><a data-target="#my_briefcase" href="/cvrf/resource/my_briefcase"><ico class="glyphicon glyphicon-briefcase"></ico> Mi malet\xc3\xadn</a></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>revised</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div><a data-target="#revised" href="/cvrf/resource/revised"><ico class="glyphicon glyphicon-book"></ico> To Revised</a></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>publisher</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div><a data-target="#publisher" href="/cvrf/resource/admin_table/publisher"><ico class="glyphicon glyphicon-edit"></ico> Publisher</a></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>publish</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div><a data-target="#publish" href="/cvrf/resource/publish"><ico class="glyphicon glyphicon-leaf"></ico> To Published</a></div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">author</td><td style="vertical-align:top;">:</td><td><div>ysantalla@upr.edu.cu</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">description</td><td style="vertical-align:top;">:</td><td><div>FASDF</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generator</td><td style="vertical-align:top;">:</td><td><div>Web2py Web Framework</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">keywords</td><td style="vertical-align:top;">:</td><td><div>FSDF</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^resource/\\w+\\.py$</div></td></tr><tr><td><div>^resource/multiple_downloads/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_cvrf</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_db_record_id</td><td style="vertical-align:top;">:</td><td><div>27L</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_db_table</td><td style="vertical-align:top;">:</td><td><div>&lt;Table web2py_session_cvrf (id, locked, client_ip, created_datetime, modified_datetime, unique_key, session_data)&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_db_unique_key</td><td style="vertical-align:top;">:</td><td><div>f54634da-2736-43fb-94f7-3e5b47e37637</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>e3cfb4629fd1f910a54d73a0dd8788bc</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>27:f54634da-2736-43fb-94f7-3e5b47e37637</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_cvrf</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>cvrf</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>db</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">subtitle</td><td style="vertical-align:top;">:</td><td><div>FASDF</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">title</td><td style="vertical-align:top;">:</td><td><div> | UPR</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>resource/multiple_downloads.html</div></td></tr></table></div>'
tRp304
sS'locals'
p305
(dp306
S'obj'
p307
S"'||'"
p308
sS'self'
p309
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p310
sS'field_is_type'
p311
S'<built-in method startswith of str object>'
p312
sS'r'
S'None'
p313
sS'fieldtype'
p314
S"'integer'"
p315
sssS'traceback'
p316
S'Traceback (most recent call last):\n  File "/opt/python/web2py/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/opt/python/web2py/web2py/applications/cvrf/controllers/resource.py", line 607, in <module>\n  File "/opt/python/web2py/web2py/gluon/globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "/opt/python/web2py/web2py/gluon/tools.py", line 4241, in f\n    return action(*a, **b)\n  File "/opt/python/web2py/web2py/applications/cvrf/controllers/resource.py", line 265, in multiple_downloads\n    db(db.resource.id == register.id).update(downloads = register.downloads + 1, modified_on = register.modified_on)\n  File "/opt/python/web2py/web2py/gluon/packages/dal/pydal/objects.py", line 2054, in update\n    ret = db._adapter.update("%s" % table._tablename, self.query, fields)\n  File "/opt/python/web2py/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1023, in update\n    sql = self._update(tablename, query, fields)\n  File "/opt/python/web2py/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1018, in _update\n    for (field, value) in fields])\n  File "/opt/python/web2py/web2py/gluon/packages/dal/pydal/adapters/base.py", line 962, in expand\n    rv = self.represent(expression, field_type)\n  File "/opt/python/web2py/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1435, in represent\n    return str(long(obj))\nValueError: invalid literal for long() with base 10: \'||\'\n'
p317
s.