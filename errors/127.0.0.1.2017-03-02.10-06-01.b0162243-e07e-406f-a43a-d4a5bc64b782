(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'DAL' object has no attribute 'website'"
p3
sS'layer'
p4
S'/opt/python/web2py/web2py/applications/cvrf/controllers/admin.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# intente algo como\n@auth.requires_membership(group_id=1)\ndef site():\n    """\n    Admin website\n    """\n    response.flash = T("Administrate website")\n    response.title = T("Administrate website")+response.title\n\n    selectable = lambda ids: db(db.auth_user.id.belongs(ids)).delete()\n\n    fields = [db.website.name, db.website.is_enabled, db.website.request_app]\n\n    grid = SQLFORM.smartgrid(db.website, selectable=selectable, fields=fields, linked_tables=[], exportclasses=dict(json=False, csv_with_hidden_cols=False, csv=False, xml=False, html=False))\n\n    heading=grid.elements(\'th\')\n    if heading:\n           heading[0].append(INPUT(_type=\'checkbox\', _onclick="jQuery(\'input[type=checkbox]\').each(function(k){jQuery(this).attr(\'checked\', \'checked\');});"))\n    return dict(grid=grid)\n\n@auth.requires_membership(group_id=1)\ndef user():\n    """\n    Administrate users and users group\n    """\n\n    selectable = lambda ids: db(db.auth_user.id.belongs(ids)).delete()\n\n    grid = SQLFORM.smartgrid(db.auth_user, selectable=selectable, linked_tables=[\'auth_membership\'], ignore_rw=True, exportclasses=dict(json=False, csv_with_hidden_cols=False, csv=False, xml=False, html=False))\n\n    heading=grid.elements(\'th\')\n    if heading:\n           heading[0].append(INPUT(_type=\'checkbox\', _onclick="jQuery(\'input[type=checkbox]\').each(function(k){jQuery(this).attr(\'checked\', \'checked\');});"))\n\n    response.flash = T("Administrate users")\n    response.title = T("Administrate users")+response.title\n    return dict(grid=grid)\n\n@auth.requires_membership(group_id=1)\ndef scheduler_task():\n    """\n    Administrate scheduler task\n    """\n    selectable = lambda ids: db_task(db_task.scheduler_task.id.belongs(ids)).delete()\n    fields = [db_task.scheduler_task.id, db_task.scheduler_task.task_name, db_task.scheduler_task.status, db_task.scheduler_task.function_name]\n\n    grid = SQLFORM.smartgrid(db_task.scheduler_task, selectable=selectable, fields=fields, exportclasses=dict(json=False, csv_with_hidden_cols=False, csv=False, xml=False, html=False))\n\n    heading=grid.elements(\'th\')\n    if heading:\n           heading[0].append(INPUT(_type=\'checkbox\', _onclick="jQuery(\'input[type=checkbox]\').each(function(k){jQuery(this).attr(\'checked\', \'checked\');});"))\n\n    response.flash = T("Administrate scheduler task")\n    response.title = T("Administrate scheduler task")+response.title\n    return dict(grid=grid)\n\n@cache.action()\ndef download():\n    return response.download(request, db)\n\nresponse._vars=response._caller(site)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/opt/python/web2py/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/opt/python/web2py/web2py/applications/cvrf/controllers/admin.py", line 62, in <module>\n  File "/opt/python/web2py/web2py/gluon/globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "/opt/python/web2py/web2py/gluon/tools.py", line 4241, in f\n    return action(*a, **b)\n  File "/opt/python/web2py/web2py/applications/cvrf/controllers/admin.py", line 13, in site\n    fields = [db.website.name, db.website.is_enabled, db.website.request_app]\n  File "/opt/python/web2py/web2py/gluon/packages/dal/pydal/base.py", line 921, in __getattr__\n    return BasicStorage.__getattribute__(self, key)\nAttributeError: \'DAL\' object has no attribute \'website\'\n'
p11
s.